html {
  box-sizing: border-box;
}

* {
  box-sizing: inherit;
}

*:before,
*:after {
  box-sizing: inherit;
}

html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}

body {
  line-height: 1;
}

ol,
ul {
  list-style: none;
}

blockquote,
q {
  quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: '';
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}@font-face {
  font-family: "PPWoodland";
  src: url(/fonts/PPWoodland-Bold.5fbb10dc.eot);
  src: url(/fonts/PPWoodland-Bold.5fbb10dc.eot) format("embedded-opentype"),url(/fonts/PPWoodland-Bold.9a792af2.woff2) format("woff2"),url(/fonts/PPWoodland-Bold.1c8ecbc9.woff) format("woff"),url(/fonts/PPWoodland-Bold.c832d9b1.ttf) format("truetype");
}

@font-face {
  font-family: "NeueMontreal";
  src: url(/fonts/NeueMontreal-Regular.5b024b03.eot);
  src: url(/fonts/NeueMontreal-Regular.5b024b03.eot) format("embedded-opentype"),url(/fonts/NeueMontreal-Regular.6f99025b.woff2) format("woff2"),url(/fonts/NeueMontreal-Regular.51a78a86.woff) format("woff"),url(/fonts/NeueMontreal-Regular.c31d7387.ttf) format("truetype");
}

p::-moz-selection,
span::-moz-selection,
a::-moz-selection,
h1::-moz-selection,
h2::-moz-selection,
h3::-moz-selection,
h4::-moz-selection,
h5::-moz-selection,
a::-moz-selection,
i::-moz-selection {
  color: #fff;
  background: #472566;
}

p::selection,
span::selection,
a::selection,
h1::selection,
h2::selection,
h3::selection,
h4::selection,
h5::selection,
a::selection,
i::selection {
  color: #fff;
  background: #472566;
}

* {
  -webkit-font-smoothing: antialiased;
  box-sizing: border-box;
}

html {
  -webkit-tap-highlight-color: transparent;
}

html.menuIsOpen {
  overflow: hidden;
  position: fixed;
}

body {
  min-height: 100%;
  padding: 15px;
  margin: 0;
  background-color: #F1FFFE;
  border: 15px solid #fff;
  font-family: "NeueMontreal","Helvetica","Arial",sans-serif;
}

@media (min-width: 1024px) {
  body {
    border: 25px solid #fff;
    padding: 25px;
  }
}

@media (min-width: 1366px) {
  body {
    border: 40px solid #fff;
  }
}

body .main-container {
  margin: 0 auto;
}

.limiter {
  padding: 0 30px;
}

@media (min-width: 1366px) {
  .limiter {
    max-width: 1260px;
    margin: 0 auto;
  }
}

@media (max-width: 1260px) and (min-width: 768px) {
  .limiter {
    max-width: 1260px;
    padding: 0 60px;
  }
}

@media (min-width: 1261px) {
  .limiter {
    max-width: 1260px;
  }
}

.content__limiter {
  padding-top: 50px;
  padding-bottom: 50px;
  position: relative;
  width: 100%;
}

@media (min-width: 768px) {
  .content__limiter {
    width: 760px;
    margin: 0 auto;
  }
}

.title {
  font-size: 24px;
  line-height: 28px;
  font-family: "PPWoodland","Helvetica","Arial",sans-serif;
  margin-bottom: 16px;
}

@media (min-width: 1024px) {
  .title {
    font-size: 35px;
    line-height: 39px;
  }
}

@media (min-width: 1366px) {
  .title {
    font-size: 60px;
    line-height: 67px;
  }
}

.title a {
  color: #262729;
  background: -webkit-gradient(linear, left top, left bottom, from(#262729), to(#262729));
  background: linear-gradient(to bottom, #262729 0%, #262729 100%);
  background-position: 0 22px;
  background-repeat: repeat-x;
  background-size: 3px 3px;
  text-decoration: none;
}

@media (min-width: 1024px) {
  .title a {
    background-position: 0 30px;
  }
}

@media (min-width: 1366px) {
  .title a {
    background-position: 0 55px;
  }
}

.title a:hover {
  background-position: 0 53px;
  background-size: auto 6px;
  background-repeat: repeat-x;
  text-decoration: none;
}

.name {
  margin-bottom: 40px;
  font-family: "PPWoodland","Helvetica","Arial",sans-serif;
  font-size: 18px;
  line-height: 22px;
}

@media (min-width: 1024px) {
  .name {
    font-size: 24px;
    line-height: 28px;
  }
}

@media (min-width: 1366px) {
  .name {
    font-size: 32px;
    line-height: 38px;
  }
}

p {
  font-family: "NeueMontreal","Helvetica","Arial",sans-serif;
  font-size: 16px;
  line-height: 22px;
  margin-bottom: 15px;
}

@media (min-width: 1024px) {
  p {
    font-size: 18px;
    line-height: 27px;
    margin-bottom: 25px;
  }
}

@media (min-width: 1366px) {
  p {
    font-size: 22px;
    line-height: 33px;
    margin-bottom: 32px;
  }
}

p .link {
  color: #62B594;
  font-family: "NeueMontreal","Helvetica","Arial",sans-serif;
  background: -webkit-gradient(linear, left top, left bottom, from(#62B594), to(#62B594));
  background: linear-gradient(to bottom, #62B594 0%, #62B594 100%);
  background-position: 0 20px;
  padding-bottom: 15px;
  background-repeat: repeat-x;
  background-size: 2px 2px;
  text-decoration: none;
}

@media (min-width: 1024px) {
  p .link {
    background-position: 0 22px;
  }
}

@media (min-width: 1366px) {
  p .link {
    background-position: 0 26px;
  }
}

p .link:hover {
  background-position: 0 24px;
  background-size: auto 4px;
  background-repeat: repeat-x;
  text-decoration: none;
}

p .squiggle {
  -webkit-animation: shift 0.3s linear infinite;
          animation: shift 0.3s linear infinite;
}

@-webkit-keyframes shift {
  from {
    -webkit-transform: translateX(0);
            transform: translateX(0);
  }

  to {
    -webkit-transform: translateX(-20px);
            transform: translateX(-20px);
  }
}

@keyframes shift {
  from {
    -webkit-transform: translateX(0);
            transform: translateX(0);
  }

  to {
    -webkit-transform: translateX(-20px);
            transform: translateX(-20px);
  }
}

p .cross-line {
  position: relative;
  display: inline-block;
}

p .cross-line::before {
  content: "";
  position: absolute;
  width: 100%;
  left: 0;
  right: 0;
  height: 2px;
  top: 55%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
  background-color: #262729;
}

.social {
  display: -webkit-box;
  display: flex;
  -webkit-box-align: center;
          align-items: center;
  padding-top: 30px;
}

.social__icon {
  margin-right: 18px;
  width: 24px;
}

.social__icon svg {
  width: 24px;
  height: 24px;
}

.social__icon:last-child {
  margin-right: 0;
}


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/